#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "QWERTY";
            bindings = <
&kp GRAVE  &kp Q       &kp W       &kp E        &kp R        &kp T                             &kp PG_UP           &kp Y        &kp U            &kp I        &kp O       &kp P              &kp EQUAL
&kp COLON  &mt LWIN A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G                   &kp HOME  &kp ENTER  &kp END  &kp H        &mt RSHFT J      &mt RCTRL K  &mt RALT L  &mt RIGHT_WIN SQT  &kp MINUS
&kp PIPE   &kp Z       &kp X       &kp C        &kp V        &kp B      &kp SPACE              &kp PG_DN           &kp N        &kp M            &kp COMMA    &kp DOT     &kp FSLH           &kp BACKSLASH
                                   &lt 3 ESC    &lt 1 SPACE  &lt 2 TAB                                             &lt 5 ENTER  &lt 4 BACKSPACE  &lt 6 DEL
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        l1 {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                    &trans          &kp LC(Y)   &kp LC(V)      &kp LC(C)   &kp LC(X)  &kp LC(Z)  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans            &trans  &trans  &trans  &kp CAPS    &kp LEFT       &kp DOWN    &kp UP     &kp RIGHT  &trans
&trans  &trans    &trans    &trans     &trans     &trans  &trans            &trans          &kp INSERT  &kp HOME       &kp PG_DN   &kp PG_UP  &kp END    &trans
                            &trans     &trans     &trans                                    &kp ENTER   &kp BACKSPACE  &kp DELETE
            >;

            label = "nav";
        };

        l2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            label = "mouse";
        };

        l3 {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans                    &trans          &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans            &trans  &trans  &trans  &trans           &kp C_PREVIOUS   &kp C_VOL_DN     &kp C_VOL_UP     &kp C_NEXT       &bt BT_CLR
&trans  &trans    &trans    &trans     &trans     &trans  &trans            &trans          &trans           &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4
                            &trans     &trans     &trans                                    &trans           &trans           &trans
            >;

            label = "media";
        };

        r1 {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL            &trans  &trans  &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH   &trans    &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &kp DOT  &kp N0  &kp MINUS                                    &trans  &trans  &trans
            >;

            label = "num";
        };

        r2 {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp COLON       &kp DOLLAR       &kp PERCENT   &kp CARET             &kp PLUS            &trans  &trans  &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp PIPE  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &kp C_MUTE       &kp LPAR      &kp RPAR                                    &trans  &trans  &trans
            >;

            label = "sym";
        };

        r3 {
            bindings = <
&trans  &kp F12  &kp F7      &kp F8  &kp F9  &kp PSCRN                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4      &kp F5  &kp F6  &kp SCROLLLOCK            &trans  &trans  &trans  &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp F10  &kp F1      &kp F2  &kp F3  &kp PAUSE_BREAK            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans                                    &trans  &trans  &trans
            >;

            label = "fun";
        };
    };
};
